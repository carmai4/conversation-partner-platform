﻿@model CPP2.Profile
@{
    ViewBag.Title = "Create Profile";
}

<h2>Create</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Gender", new SelectList(new[] { "Male", "Female" }))
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PrimaryLanguge, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PrimaryLanguge", new SelectList(new[] { "English", "Japanese", "Korean", "Chinese", "Thai", "French", "Portuguese", "Turkish", "Vietnamese", "German", "Italian", "Russain", "Indonesain", "Arabic" }))
                @Html.ValidationMessageFor(model => model.PrimaryLanguge, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LanguageLearning, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LanguageLearning", new SelectList(new[] { "English", "Japanese", "Korean", "Chinese", "Thai", "French", "Portuguese", "Turkish", "Vietnamese", "German", "Italian", "Russain", "Indonesain", "Arabic" }))
                @Html.ValidationMessageFor(model => model.LanguageLearning, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.DropDownList("SpeakingAbility", new SelectList(new[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }))
            <div class="col-md-10">
                @Html.EditorFor(model => model.SpeakingAbility, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SpeakingAbility, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.DropDownList("ComprehensionAbility", new SelectList(new[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }))
            <div class="col-md-10">
                @Html.EditorFor(model => model.ComprehensionAbility, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ComprehensionAbility, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("State", new SelectList(new[] { "Virginia", "North Carolina", "Tennessee", "West Virginia", "Pennsylvania" }))
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Country", new SelectList(new[] { "USA", "Canada", "Japan", "South Korea", "China" }))
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TimeZoneCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TimeZoneCode", new SelectList(new[] { "Eastern Standard Time", "Central Standard Time", "Mountain Standard Time", "Pacific Standard Time" }))
                @Html.ValidationMessageFor(model => model.TimeZoneCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Desired_Hours, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Desired_Hours, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Desired_Hours, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.Interest1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               


                @Html.DropDownList("Interest1", new SelectList(ViewBag.interestList, "Value", "Text"));



                @Html.ValidationMessageFor(model => model.Interest1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Interest2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Interest2", new SelectList(ViewBag.interestList, "Value", "Text"));
                @Html.ValidationMessageFor(model => model.Interest2, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Interest3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Interest3", new SelectList(ViewBag.interestList, "Value", "Text"));
                @Html.ValidationMessageFor(model => model.Interest3, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Interest4, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Interest4", new SelectList(ViewBag.interestList, "Value", "Text"));
                @Html.ValidationMessageFor(model => model.Interest4, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Interest5, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Interest5", new SelectList(ViewBag.interestList, "Value", "Text"));
                @Html.ValidationMessageFor(model => model.Interest5, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PreferredGender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PreferredGender", new SelectList(new[] { "None", "Male", "Female" }))
                @Html.ValidationMessageFor(model => model.PreferredGender, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}